<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ld.store.dao.OutstoreinfoMapper">
    <sql id="Base_Column_List">
            outStoreInfoId,
            outStoreNo,
            makingTime,
            note,
            goodsDesc,
            approveUserId,
            approveUserName,
            outStoreStatus,
            enabled
    </sql>
    <resultMap id="BaseResultMap" type="com.ld.store.entity.Outstoreinfo">
    <!--@mbg.generated-->
    <result column="outStoreInfoId" jdbcType="VARCHAR" property="outstoreinfoid" />
    <result column="outStoreNo" jdbcType="VARCHAR" property="outstoreno" />
    <result column="makingTime" jdbcType="BIGINT" property="makingtime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="goodsDesc" jdbcType="VARCHAR" property="goodsdesc" />
    <result column="approveUserId" jdbcType="VARCHAR" property="approveuserid" />
    <result column="approveUserName" jdbcType="VARCHAR" property="approveusername" />
    <result column="outStoreStatus" jdbcType="TINYINT" property="outstorestatus" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
  </resultMap>
  <insert id="insert" parameterType="com.ld.store.entity.Outstoreinfo">
    <!--@mbg.generated-->
    insert into outstoreinfo (outStoreInfoId, outStoreNo, makingTime, 
      note, goodsDesc, approveUserId, 
      approveUserName, outStoreStatus, enabled
      )
    values (#{outstoreinfoid,jdbcType=VARCHAR}, #{outstoreno,jdbcType=VARCHAR}, #{makingtime,jdbcType=BIGINT}, 
      #{note,jdbcType=VARCHAR}, #{goodsdesc,jdbcType=VARCHAR}, #{approveuserid,jdbcType=VARCHAR}, 
      #{approveusername,jdbcType=VARCHAR}, #{outstorestatus,jdbcType=TINYINT}, #{enabled,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ld.store.entity.Outstoreinfo">
    <!--@mbg.generated-->
    insert into outstoreinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outstoreinfoid != null">
        outStoreInfoId,
      </if>
      <if test="outstoreno != null">
        outStoreNo,
      </if>
      <if test="makingtime != null">
        makingTime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="goodsdesc != null">
        goodsDesc,
      </if>
      <if test="approveuserid != null">
        approveUserId,
      </if>
      <if test="approveusername != null">
        approveUserName,
      </if>
      <if test="outstorestatus != null">
        outStoreStatus,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outstoreinfoid != null">
        #{outstoreinfoid,jdbcType=VARCHAR},
      </if>
      <if test="outstoreno != null">
        #{outstoreno,jdbcType=VARCHAR},
      </if>
      <if test="makingtime != null">
        #{makingtime,jdbcType=BIGINT},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="goodsdesc != null">
        #{goodsdesc,jdbcType=VARCHAR},
      </if>
      <if test="approveuserid != null">
        #{approveuserid,jdbcType=VARCHAR},
      </if>
      <if test="approveusername != null">
        #{approveusername,jdbcType=VARCHAR},
      </if>
      <if test="outstorestatus != null">
        #{outstorestatus,jdbcType=TINYINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into outstoreinfo
    (outStoreInfoId, outStoreNo, makingTime, note, goodsDesc, approveUserId, approveUserName, 
      outStoreStatus, enabled)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.outstoreinfoid,jdbcType=VARCHAR}, #{item.outstoreno,jdbcType=VARCHAR}, #{item.makingtime,jdbcType=BIGINT}, 
        #{item.note,jdbcType=VARCHAR}, #{item.goodsdesc,jdbcType=VARCHAR}, #{item.approveuserid,jdbcType=VARCHAR}, 
        #{item.approveusername,jdbcType=VARCHAR}, #{item.outstorestatus,jdbcType=TINYINT}, 
        #{item.enabled,jdbcType=TINYINT})
    </foreach>
  </insert>

<!--auto generated by MybatisCodeHelper on 2019-12-13-->
    <select id="queryAllByOutstoreinfoid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from outstoreinfo
        where 1=1
        <if test="outstoreinfoid != null">
            and outStoreInfoId=#{outstoreinfoid,jdbcType=VARCHAR}
        </if>
    </select>

<!--auto generated by MybatisCodeHelper on 2019-12-13-->
    <select id="queryByAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from outstoreinfo
        where 1=1

        <if test="outStoreNo != null">
            and outStoreNo=#{outStoreNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null and endTime != null">
            and makingTime &gt; #{startTime} and makingTime &lt; #{endTime}
         </if>
            and enabled=0  limit #{startRow} ,#{pageSize}
    </select>
</mapper>